// Array and Functions Bonus Material


// Define a function maxOfTwoNumbers that takes two numbers as arguments and returns the largest of them. 

function maxofTwoNumbers (num1, num2) {
 if (num1 > num2)  {
 	 return num1  
 	} else { return num2}
 }

console.log(maxofTwoNumbers(1,2))
console.log(maxofTwoNumbers(10,8))
console.log(maxofTwoNumbers(134,200))




// Use the if-then-else construct available in Javascript. You'll have to remember your pre-work, or do some googling to figure this out.


// Define a function maxOfThree that takes three numbers as arguments and returns the largest of them.

function maxofThree (num1, num2, num3) {
 if (num1 > num2 && num2 > num3)  {
 	 return num1 ;
 	} else if ( num2 > num1 && num2 > num3 )  {
 	return num2;
 }  else { return num3 };
}

console.log(maxofThree(1,2,3))
console.log(maxofThree(5,2,10))
console.log(maxofThree(2,4,7))


// Write a function that takes a character (i.e. a string of length 1) and returns true if it is a vowel, false otherwise.

function vowel (char1)   { 
var vowels = ("a", "e", "i", "o", "u") 
// 	( var i = 0; i < vowels.length, i++ ) 
	  var vowelSearch = vowels.search(char1)
	    

  if ( vowelSearch == -1 )  {    
 	 console.log("False") 
 	 }  else  { console.log("True")
}
}


console.log(vowel("a"))
console.log(vowel("b"))
console.log(vowel("e"))    // CAN"T GET THIS TO WORK !!





// Define a function sumArray and a function multiplyArray that sums and multiplies (respectively) all the numbers in an array of numbers. For example, sumArray([1,2,3,4]) should return 10, and multiplyArray([1,2,3,4]) should return 24.
// Bonus

function sumArray(num1, num2, num3, num4) {


for (var i = 0, i <  sumArray.length;  i++)  {
	sum1 += sumArray(i);
}
} 
console.log(sumArray)









// Define a function reverseString that computes the reversal of a string. For example, reverseString("jag testar") should return the string "ratset gaj".


// Write a function findLongestWord that takes an array of words and returns the length of the longest one.

// Write a function filterLongWords that takes an array of words and an number i and returns the array of words that are longer than i.


// Homework: The Word Guesser




// You'll create a simple word guessing game where the user gets infinite tries to guess the word (like Hangman without the hangman, 
	// or like Wheel of Fortune without the wheel and fortune).

// Create two global arrays: one to hold the letters of the word (e.g. 'F', 'O', 'X'), and one to hold the current
//  guessed letters (e.g. it would start with '', '', '_' and end with 'F', 'O', 'X').
// Write a function called guessLetter that will:

// Take one argument, the guessed letter. Iterate through the word letters and see if the guessed letter is in there.
// If the guessed letter matches a word letter, changed the guessed letters array to reflect that.
// When it's done iterating, it should log the current guessed letters ('F__') and congratulate the user if they found a new letter.
// It should also figure out if there are any more letters that need to be guessed, and if not, it should congratulate the user for winning the game.
// // Pretend you don't know the word, and call guessLetter multiple times with various letters to check that your program works.


// var tempsInF = [100, 72, 88, 15, 25, 32];
// var tempsInC = [];

// function fahrToCelc(degrees) {
//   return (degrees - 32) * (5 / 9);
// }

// tempsInC.push(fahrToCelc(tempsInF[0]));


//   tempsInC.push(fahrToCelc(tempsInF[1]));
//   tempsInC.push(fahrToCelc(tempsInF[2]));
//   tempsInC.push(fahrToCelc(tempsInF[3]));
//   tempsInC.push(fahrToCelc(tempsInF[4]));
//   tempsInC.push(fahrToCelc(tempsInF[5]));

// for (var i = 0; i < tempsInF.length; i += 1) {
//   tempsInC.push(fahrToCelc(tempsInF[i]));
// }


function hangman(letter1) {

var rightLetter = ['C', 'A', 'T', 'S']; 
var guessLetter = ['_', '_', '_' , '_']; 

var correctLetIndex = rightLetter.indexOf(letter1)
var LetNum = new RegExp(correctLetIndex) 
     
     if (correctLetIndex == -1 ) { 
     	console.log("letter doesn't match");  
} else if ( rightLetter !== guessLetter ) {
    guessLetter.splice(correctLetIndex, 1, letter1);
	   console.log("Congratulations you found a new letter " + letter1 + " " + guessLetter.toString() ) ; 
}  else  { console.log("You Won!"); }

}
// use 'push'  to add  letters  to an array 



// f
// Bonus: Make it more like Wheel of Fortune:

// Start with a reward amount of $0
// Every time a letter is guessed, generate a random amount and reward the user if they found a letter (multiplying the reward if multiple letters found), 
// otherwise subtract from their reward.
// When they guess the word, log their final reward amount.
// Bonus: Make it like Hangman:

// Keep track of all the guessed letters (right and wrong) and only let the user guess a letter once. If they guess a letter twice, do nothing.
// Keep track of the state of the hangman as a number (starting at 0), and subtract or add to that number every time they make a wrong guess.
// Once the number reaches 6 (a reasonable number of body parts for a hangman), inform the user that they lost and show a hangman on the log.


