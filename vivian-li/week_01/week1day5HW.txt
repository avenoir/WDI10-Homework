

// planTrip('N', 'Times Square', '6', '33rd'); // This is only a suggested function name and signature.

// // console.log() shows output similar to this:
// // "Your must travel through the following stops on the N line: 34th, 28th, 23rd, Union Square."
// // "Change at Union Square."
// // "Your journey continues through the following stops: 23rd, 28th, 33rd."
// // "7 stops in total."
// There are 3 subway lines:
// The N line has the following stops: Times Square, 34th, 28th, 23rd, Union Square, and 8th
// The L line has the following stops: 8th, 6th, Union Square, 3rd, and 1st
// The 6 line has the following stops: Grand Central, 33rd, 28th, 23rd, Union Square, and Astor Place.
// All 3 subway lines intersect at Union Square, but there are no other intersection points. (For example, this means the 28th stop on the N line is different than the 28th street stop on the 6 line, so you'll have to differentiate this when you name your stops in the arrays.)
// Tell the user the number of stops AND the stops IN ORDER that they will pass through or change at.
// Hints:

// Work out how you would do it on paper first! Then start to explain that process in Javascript.
// Get the program to work for a single line before trying to tackle multiple lines.
// Don't worry about prompting the user for input. Hard code some values to get it working. You can use prompt() later to make it more interactive.
// Consider diagramming the lines by sketching out the subway lines and their stops and intersection.
// The key to the lab is finding the index positions of each stop. (hint: indexOf())
// Make sure the stops that are the same for different lines have different names (i.e. 23rd on the N and on the 6 need to be differentiated)



// var person = prompt("Please enter your name", "Harry Potter");


var mta = { lineL: ['8th on L', '6th', 'Union Square', '3rd', '1st'] ,
				 line6 : ['Grand Central', '33rd', '28th on 6', '23rd on 6', 'Union Square', 'Astor Place' ] ,  
				  lineN : ['TimesSquare', '34th', '28th on N', '23rd on N', 'Union Square', '8th on N' ]    } 



var planTrip = function (startStation, startL, endStation, endL)

   
 {

if (startL === endL) { sameLine(startStation, startL, endStation, endL) 
	 } else {differentLine(startStation, startL, endStation, endL )}

}

	
			var sameLine = function (startStation, startL, endStation, endL)   {
    
    var sameLineJourney = []; 

  if (startL === 'L') { 
	startLine = mta.lineL ;
}   else if (startL=== '6') { 	
	startLine = mta.line6 ;
     } else if (startL === 'N') {
     	startLine = mta.lineN
     	}  else {(console.log("Please enter L, 6 or N") ) ;
     }


          var sameLineNumStations = Math.abs(startLine.indexOf(endStation) - startLine.indexOf(startStation));
              var sameLineStart = startLine.indexOf(startStation);
    var sameLineEnd = startLine.indexOf(endStation);

   
        if (sameLineStart > sameLineEnd)  {
            for (var i = sameLineStart-1 ; i >= sameLineEnd; i-- ) {
                sameLineJourney.push(startLine[i]) ;
              

            }             
        }
        else if (sameLineStart < sameLineEnd ) {
            for (var i = sameLineStart+1; i <= UnionSquare1; i++){
                sameLineJourney.push(startLine[i]) ;
                 
            } 
           
        }
        console.log( "Your must travel through the following stops on the " +  startL + " line : " +  sameLineJourney)
        console.log( sameLineNumStations  + " stops in total.")
        
}








// var startJourney = []; 
// var endJourney = []; 
var differentLine = function (startStation, startL, endStation, endL) {

var startJourney = []; 
var endJourney = []; 

	  if (startL === 'L') { 
	startLine = mta.lineL ;
}   else if (startL=== '6') { 	 
	startLine = mta.line6 ;
     } else if (startL === 'N') {
     	startLine = mta.lineN ;
     	}  else {(console.log("Please enter L, 6 or N for line") ) ;
     }



	var startNumStations = Math.abs(startLine.indexOf(startStation) - startLine.indexOf("Union Square"));
	
    var start = startLine.indexOf(startStation);
  
    var UnionSquare1 = startLine.indexOf("Union Square");
  
        if (start > UnionSquare1) {
            for (var i = start -1 ; i >= UnionSquare1; i-- ) {
                startJourney.push(startLine[i]) ;
               

            }             
        }

        else if (start < UnionSquare1) {
            for (var i = start +1; i <= UnionSquare1; i++){
                startJourney.push(startLine[i]) ;
               
            } 
        
        }
    

     





	  if (endL === 'L') { 
	endLine = mta.lineL ;
}   else if (endL=== '6') { 	
	endLine = mta.line6 ;
     } else if (endL === 'N') {
     	endLine = mta.lineN ;
     	}  else {(console.log("Please enter L, 6 or N for line") ); 
    } 

	var endNumStations = Math.abs(endLine.indexOf(endStation) - endLine.indexOf("Union Square"));
	
    var end = endLine.indexOf(endStation); 
  
    var UnionSquare2 = endLine.indexOf("Union Square");
  
    if (end > UnionSquare2) {
        for (var i = UnionSquare2 + 1  ; i <= end; i++) {
            endJourney.push(endLine[i])

        } ;
 
    }
    else if (end < UnionSquare2) {
        for (var i = UnionSquare2 - 1 ; i >= end; i--) {
           endJourney.push(endLine[i]) 
       
        } 
      
    }
    

        console.log("You are starting at Line " + startL + " " + startStation + " station " + ", ending at Line " + endL + " " + endStation )
        console.log( "Your must travel through the following stops on the " +  startL + " line : " +  startJourney)
        console.log("Change at union square ")
          console.log( "Our journey continues through the following stops on the " +  endL + " line : " +  endJourney)
          console.log( endNumStations + startNumStations + " stops in total.")


}





planTrip("8th on N", "N", "8th on L", "L")
planTrip("8th on N", "N", "Astor Place", "6") 
// planTrip("8th on N", "N", "34th", "N")
// planTrip("Grand Central", "6", "28th on N", "N")
// planTrip("Astor Place", "6", "8th on L", "L")
planTrip("8th on N", "N", "8th on N", "N")




